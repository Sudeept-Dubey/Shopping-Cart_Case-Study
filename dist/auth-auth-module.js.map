{"version":3,"sources":["webpack:///./src/app/auth/auth-routing.module.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/login/login.component.scss","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/auth/register/register.component.html","webpack:///./src/app/auth/register/register.component.scss","webpack:///./src/app/auth/register/register.component.ts"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n \n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent\n  },\n  {\n      path:'register',\n      component:RegisterComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { AuthRoutingModule } from './auth-routing.module';\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent],\n  imports: [CommonModule, SharedModule, AuthRoutingModule]\n})\nexport class AuthModule {}\n","module.exports = \"<mat-card class=\\\"login-card\\\">\\n  <mat-card-header>\\n    <mat-card-title>Login</mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <form>\\n      <table cellspacing=\\\"0\\\" class=\\\"full-width\\\">\\n        <tr>\\n          <td>\\n            <mat-form-field class=\\\"full-width\\\">\\n              <input name=\\\"email\\\" [(ngModel)]=\\\"email\\\" matInput placeholder=\\\"Email\\\" required type=\\\"email\\\" />\\n            </mat-form-field>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>\\n            <mat-form-field class=\\\"full-width\\\">\\n              <input name=\\\"password\\\" [(ngModel)]=\\\"password\\\" matInput placeholder=\\\"Password\\\" required type=\\\"password\\\" />\\n            </mat-form-field>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td colspan=\\\"2\\\">\\n            <mat-error *ngIf=\\\"error|async\\\">{{ error|async }}</mat-error>\\n          </td>\\n        </tr>\\n      </table>\\n    </form>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <div>\\n      <button class=\\\"full-width\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"login()\\\" [tabIndex]=\\\"0\\\">Login</button>\\n    </div>\\n    <div style=\\\"margin-top:2em\\\">\\n      <span>\\n        New to Product Mart?\\n        <a [routerLink]=\\\"['/auth/register']\\\">Sign up</a> here.\\n      </span>\\n    </div>\\n  </mat-card-actions>\\n</mat-card>\"","module.exports = \".login-card {\\n  max-width: 800px;\\n  min-width: 150px;\\n  margin: 10% auto; }\\n\\n.full-width {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9sb2dpbi9EOlxccHJvZHVjdC1tYXJ0XFxwcm9kdWN0LW1hcnQvc3JjXFxhcHBcXGF1dGhcXGxvZ2luXFxsb2dpbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsZ0JBQWdCLEVBQUE7O0FBR2xCO0VBQ0UsV0FBVyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5sb2dpbi1jYXJkIHtcbiAgbWF4LXdpZHRoOiA4MDBweDtcbiAgbWluLXdpZHRoOiAxNTBweDtcbiAgbWFyZ2luOiAxMCUgYXV0bztcbn1cblxuLmZ1bGwtd2lkdGgge1xuICB3aWR0aDogMTAwJTtcbn1cbiJdfQ== */\"","import { Component, OnInit, ChangeDetectionStrategy } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { AuthService } from \"../../core/auth/auth.service\";\nimport { BehaviorSubject } from \"rxjs\";\n\n@Component({\n  selector: \"pm-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LoginComponent implements OnInit {\n  email: string;\n  error: BehaviorSubject<string>;\n  password: string;\n  constructor(private router: Router, private authService: AuthService) {}\n\n  ngOnInit() {\n    this.error = new BehaviorSubject('')\n  }\n\n  login() {\n    this.authService.login(this.email, this.password).subscribe(\n      s => this.router.navigate([\"\"]),\n      e => {\n        console.log(\"e\", e);\n        this.error.next(e);\n      }\n    );\n  }\n}\n","module.exports = \"<mat-card class=\\\"register-card\\\">\\n  <mat-card-header>\\n    <mat-card-title>Register</mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <form>\\n      <table cellspacing=\\\"0\\\" class=\\\"full-width\\\" [formGroup]=\\\"userForm\\\">\\n        <tr>\\n          <td>\\n            <mat-form-field class=\\\"full-width\\\">\\n              <input name=\\\"fullname\\\" formControlName=\\\"fullname\\\" matInput placeholder=\\\"FullName\\\" required />\\n            </mat-form-field>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>\\n            <mat-form-field class=\\\"full-width\\\">\\n              <input name=\\\"email\\\" formControlName=\\\"email\\\" matInput placeholder=\\\"Email\\\" required type=\\\"email\\\" />\\n            </mat-form-field>\\n            <mat-error *ngIf=\\\"email.invalid && email.errors.email\\\">\\n              Invalid email\\n            </mat-error>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>\\n            <mat-form-field class=\\\"full-width\\\">\\n              <input name=\\\"password\\\" formControlName=\\\"password\\\" matInput placeholder=\\\"Password\\\" required\\n                type=\\\"password\\\" />\\n            </mat-form-field>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>\\n            <mat-form-field class=\\\"full-width\\\">\\n              <input name=\\\"repeatPassword\\\" formControlName=\\\"repeatPassword\\\" matInput placeholder=\\\"Repeat Password\\\"\\n                required type=\\\"password\\\" />\\n            </mat-form-field>\\n            <mat-error *ngIf=\\\"\\n                repeatPassword.invalid && repeatPassword.errors.passwordMatch\\n              \\\">\\n              Password should match\\n            </mat-error>\\n          </td>\\n        </tr>\\n      </table>\\n    </form>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <div>\\n      <button class=\\\"full-width\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"register()\\\">\\n        Register\\n      </button>\\n    </div>\\n    <div style=\\\"margin-top:2em\\\">\\n      <span>Already have a account <a [routerLink]=\\\"['/auth']\\\">login</a> here</span>\\n    </div>\\n  </mat-card-actions>\\n</mat-card>\"","module.exports = \".register-card {\\n  max-width: 800px;\\n  min-width: 150px;\\n  margin: 10% auto; }\\n\\n.full-width {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9yZWdpc3Rlci9EOlxccHJvZHVjdC1tYXJ0XFxwcm9kdWN0LW1hcnQvc3JjXFxhcHBcXGF1dGhcXHJlZ2lzdGVyXFxyZWdpc3Rlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsZ0JBQWdCLEVBQUE7O0FBR2xCO0VBQ0UsV0FBVyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvYXV0aC9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yZWdpc3Rlci1jYXJkIHtcbiAgbWF4LXdpZHRoOiA4MDBweDtcbiAgbWluLXdpZHRoOiAxNTBweDtcbiAgbWFyZ2luOiAxMCUgYXV0bztcbn1cblxuLmZ1bGwtd2lkdGgge1xuICB3aWR0aDogMTAwJTtcbn1cbiJdfQ== */\"","import { FormControl, Validators } from '@angular/forms';\nimport { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../core/auth/auth.service';\n\n@Component({\n  selector: 'pm-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n  changeDetection:ChangeDetectionStrategy.OnPush\n})\nexport class RegisterComponent implements OnInit {\n  userForm = new FormGroup({\n    fullname: new FormControl('', [Validators.required]),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required]),\n    repeatPassword: new FormControl('', [\n      Validators.required,\n      this.passwordsMatch\n    ])\n  });\n  constructor(private router: Router, private authService: AuthService) {\n    console.log('userform', this.userForm);\n  }\n\n  passwordsMatch(control: FormControl) {\n    const password = control.root.get('password');\n    return password && control.value !== password.value\n      ? {\n          passwordMatch: true\n        }\n      : null;\n  }\n\n  register() {\n    if (!this.userForm.valid) {\n      return;\n    }\n\n    const user = this.userForm.getRawValue();\n    this.authService.register(user).subscribe(s => this.router.navigate(['/']));\n  }\n\n  get fullname() {\n    return this.userForm.get('fullname');\n  }\n\n  get email() {\n    return this.userForm.get('email');\n  }\n\n  get password() {\n    return this.userForm.get('password');\n  }\n\n  get repeatPassword() {\n    return this.userForm.get('repeatPassword');\n  }\n  ngOnInit() {}\n}\n"],"sourceRoot":""}